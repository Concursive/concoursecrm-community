#!/bin/sh

#############################################################################
#
# Configuration
#
#############################################################################
ENVFILE="scripts/env.`hostname`.sh"
PROGNAME=`basename $0`
BASE=`pwd`
WEBUSER="apache"
CFSGROUP="cfs"
CFSDBA="cfsdba"
SITEHOME="/home"
SITECODE=""
GKHOST="jdbc:postgresql://127.0.0.1:5432/cfs2gk"
PARAMS=""

usage ()
{
	printf "\nUsage: ${PROGNAME} site_code\n\n"
	printf "Where:\n"
	printf "    site_code   is the target directory under ${SITEHOME} to deploy\n"
	printf "\n"
	exit 1
}

#############################################################################
#
# Check that user is root.
#
#############################################################################
if [ "`id -u`" != "0" ] ; then echo "Sorry, you must be root." ; exit 1 ; fi

#############################################################################
#
# Set up environment.
#
#############################################################################
if [ ! -f "${ENVFILE}" ] ; then echo "Missing file: ${ENVFILE}" ; exit ; fi
. ${ENVFILE}

#############################################################################
#
# Get command-line parameters.
#
#############################################################################
if [ -n "$1" ] ; then SITECODE="$1"; shift ; fi
if [ -z "${SITECODE}" ] ; then echo "Missing site code" ; usage ; fi

#############################################################################
#
# Configuration using supplied parameters.
#
#############################################################################
DIRDST="${SITEHOME}/${SITECODE}"

#############################################################################
#
# Begin install
#
#############################################################################
LOG="${PROGNAME}_${SITECODE}.log"

echo `date` >${LOG}

(
#############################################################################
#
# Verify directories
#
#############################################################################
if [ ! -d "$DIRDST" ] ; then
	if [ ! -d "$DIRDST" ] ; then echo "Exiting... destination directory does not exist"; exit 1; fi
fi


#############################################################################
#
#############################################################################
# rm -f ${DIRDST}/html/index.jsp

if [ -n "${DEST_DOCROOT}" ] ; then PARAMS="${PARAMS} -DDEST_DOCROOT=${DEST_DOCROOT}" ; fi

if [ -n "${SITECODE}" ] ; then PARAMS="${PARAMS} -DSITECODE=${SITECODE}" ; fi

if [ -n "${SITEHOME}" ] ; then PARAMS="${PARAMS} -DSITEHOME=${SITEHOME}" ; fi

if [ -n "${GKHOST}" ] ; then PARAMS="${PARAMS} -DGKHOST=${GKHOST}" ; fi

if [ -n "${GKDRIVER}" ] ; then PARAMS="${PARAMS} -DGKDRIVER=${GKDRIVER}" ; fi

if [ -n "${GKUSER}" ] ; then PARAMS="${PARAMS} -DGKUSER=${GKUSER}" ; fi

if [ -n "${GKUSERPW}" ] ; then PARAMS="${PARAMS} -DGKUSERPW=${GKUSERPW}" ; fi

if [ -n "${GKUSER}" ] ; then PARAMS="${PARAMS} -DGKUSER=${GKUSER}" ; fi

if [ -n "${FORCESSL}" ] ; then PARAMS="${PARAMS} -DFORCESSL=${FORCESSL}" ; fi

if [ -n "${DEBUGLEVEL}" ] ; then PARAMS="${PARAMS} -DDEBUGLEVEL=${DEBUGLEVEL}" ; fi

if [ -n "${DBSITECODE}" ] ; then PARAMS="${PARAMS} -DDBSITECODE=${DBSITECODE}" ; fi

echo "Params: ${PARAMS}"

ant ${PARAMS} lib
##/home/${SITECODE}/bin/restart 


) >>${LOG} 2>&1 

cat ${LOG}

exit 0


