<!--
 $Id$

 Notes: 
   Make sure to override all preferences for the current system.
   Root/Administrator access may be required
-->
<project name="cfs" default="init" basedir="">

  <!-- enable environment variables -->
  <property environment="env"/>
  
  <!-- computed properties -->
  <property name="SRC" value="${basedir}"/>
  <property name="SRC_APP" value="${SRC}/production/webapps/cfs2"/>
  <property name="SRC_CLASSES" value="${SRC_APP}/WEB-INF/classes"/>
  <property name="SRC_LIB" value="${SRC_APP}/WEB-INF/lib"/>
  <property name="SRC_BIN" value="${SRC}/bin"/>

  <!-- classpath as both object and a property -->
  <path id="cfs2.classpath">
    <pathelement path="${SRC_CLASSES}"/>
    <fileset dir="${env.TOMCAT_HOME}/common/lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <property name="CLASSPATH" refid="cfs2.classpath" />

  <target name="init">
    <!-- Environment variable must be set before continuing -->
    <fail unless="env.CFS_HOME">Build aborted, environment variable CFS_HOME is not defined.</fail>
    <property name="CFS_HOME" value="${env.CFS_HOME}"/>
    
    <!-- See if the properties file exists -->
    <available file="${CFS_HOME}/WEB-INF/build.env" property="build.config.present"/>
    <fail unless="build.config.present">Build aborted, Build properties file not found at ${CFS_HOME}/WEB-INF/build.env.</fail>
    
    <!-- Load the properties for this system, stop here if not found -->
    <loadproperties srcFile="${SRC}/build.env">
      <filterchain>
        <filterreader classname="org.apache.tools.ant.filters.StripLineComments">
          <param type="comment" value="#"/>
        </filterreader>
      </filterchain>
    </loadproperties>
    
    <!-- Default properties if not set in file above -->
    <property name="SITEHOME" value="/home"/>
    <property name="SITECODE" value="cfs"/>
    <property name="DBSITECODE" value="ds21"/>
    <property name="GKDRIVER" value="org.postgresql.Driver"/>
    <property name="GKHOST" value="jdbc:postgresql://127.0.0.1:5432/cfs2gk"/>
    <property name="GKUSER" value="postgres"/>
    <property name="GKUSERPW" value=""/>
    <property name="MAILSERVER" value="127.0.0.1"/>
    <property name="FORCESSL" value="false"/>
    <property name="DEBUGLEVEL" value="none"/>
    <!--<property name="DBTYPE" value="postgresql"/>-->
    <property name="DBTYPE" value="mssql"/>
    <property name="DRIVER" value="com.microsoft.jdbc.sqlserver.SQLServerDriver"/>
    <property name="URL" value="jdbc:microsoft:sqlserver://127.0.0.1:1433;DatabaseName=cdb_cfs;SelectMethod=cursor"/>
    <property name="USERID" value="username"/>
    <property name="PASSWORD" value="password"/>
    
    <!-- Begin output -->
    <tstamp><format property="NOW" pattern="yyyy-MM-dd hh:mm:ss" /></tstamp>
    <echo message="CFS Installation Script"/>
    <echo message="Date: ${NOW}"/>
    <echo message="System: ${os.name}"/>
    <echo message="Ant version: ${ant.version}"/>
    <echo message="Java version: ${ant.java.version}"/>
    <echo message="Source Path: ${SRC}"/>
    <echo message="Destination Path: ${CFS_HOME}"/>
    
    <!-- See if files are up-to-date so only new files are installed during development -->
    <uptodate property="jars-uptodate">
      <srcfiles dir="${SRC_CLASSES}" includes="**/*.java"/>
      <mapper type="merge" to="${SRC_LIB}/aspcfs.jar"/>
    </uptodate>
    <uptodate property="site-uptodate" >
        <srcfiles dir="${SRC_APP}" >
          <include name="*" />
          <include name="images/**" />
          <include name="javascript/**" />
          <include name="WEB-INF/*.xml" />
          <include name="css/**" />
          <include name="WEB-INF/*.tld" />
          <exclude name="WEB-INF/web.xml" />
        </srcfiles>
        <mapper type="glob" from="*" to="${CFS_HOME}/*"/>
     </uptodate>
  </target>

  <target name="compile" 
          description="compile classes into JARs"
          depends="init" 
          unless="jar-uptodate">
    <!-- darkhorseventures.jar -->
    <echo message=" Compiling Source: ${SRC_CLASSES}/com/darkhorseventures"/>
    <javac srcdir="${SRC_CLASSES}/com/darkhorseventures" verbose="off">
        <classpath>
            <path refid="cfs2.classpath"/>
        </classpath>
    </javac>
    <delete file="${SRC_LIB}/darkhorseventures.jar"/>
    <jar jarfile="${SRC_LIB}/darkhorseventures.jar"
          basedir="${SRC_CLASSES}"
          includes="com/darkhorseventures/**/*.class"/>
    <delete>
        <fileset dir= "${SRC_CLASSES}/com/darkhorseventures" includes="**/*.class"/>
    </delete>
    <!-- isavvix.jar -->
    <echo message=" Compiling Source: ${SRC_CLASSES}/com/isavvix"/>
    <javac srcdir="${SRC_CLASSES}/com/isavvix" verbose="off">
        <classpath>
            <path refid="cfs2.classpath"/>
        </classpath>
    </javac>
    <delete file="${SRC_LIB}/isavvix.jar"/>
    <jar jarfile="${SRC_LIB}/isavvix.jar"
          basedir="${SRC_CLASSES}"
          includes="com/isavvix/**/*.class"/>
    <delete>
        <fileset dir= "${SRC_CLASSES}/com/isavvix" includes="**/*.class"/>
    </delete>
    <!-- aspcfs.jar -->
    <echo message=" Compiling Source: ${SRC_CLASSES}/org/aspcfs"/>
    <javac srcdir="${SRC_CLASSES}/org/aspcfs" verbose="off">
        <classpath>
            <path refid="cfs2.classpath"/>
            <pathelement location="${SRC_LIB}/darkhorseventures.jar"/>
            <pathelement location="${SRC_LIB}/isavvix.jar"/>
            <pathelement location="${SRC_LIB}/zeroio-iteam.jar"/>
            <pathelement location="${SRC_LIB}/jfreechart-0.9.3.jar"/>
            <pathelement location="${SRC_LIB}/utils.jar"/>
            <pathelement location="${SRC_LIB}/ccp_integration.jar"/>
        </classpath>
    </javac>
    <delete file="${SRC_LIB}/aspcfs.jar"/>
    <jar jarfile="${SRC_LIB}/aspcfs.jar"
          basedir="${SRC_CLASSES}"
          includes="org/aspcfs/**/*.class"/>
    <delete>
        <fileset dir= "${SRC_CLASSES}/org/aspcfs" includes="**/*.class"/>
    </delete>
  </target>
  
  <!-- separate app installation stuff -->
  <target name="check-apps-configuration">
    <available file="${CFS_HOME}/WEB-INF/notifier.xml" property="apps.config.present"/>
  </target>
  
  <target name="apps-configuration" depends="check-apps-configuration"
          unless="apps.config.present">
    <echo message="Installing App configuration files"/>
    <copy todir="${CFS_HOME}/WEB-INF">
      <fileset dir="${SRC_BIN}">
        <include name="notifier.xml" />
      </fileset>
    </copy>
    <replace file="${CFS_HOME}/WEB-INF/notifier.xml"
             token="@FILELIBRARY@" value="${CFS_HOME}/WEB-INF/fileLibrary"/>
    <replace file="${CFS_HOME}/WEB-INF/notifier.xml"
             token="@GKDRIVER@" value="${GKDRIVER}"/>
    <replace file="${CFS_HOME}/WEB-INF/notifier.xml"
             token="@GKHOST@" value="${GKHOST}"/>
    <replace file="${CFS_HOME}/WEB-INF/notifier.xml"
             token="@GKUSER@" value="${GKUSER}"/>
    <replace file="${CFS_HOME}/WEB-INF/notifier.xml"
             token="@GKUSERPW@" value="${GKUSERPW}"/>
    <replace file="${CFS_HOME}/WEB-INF/notifier.xml"
             token="@MAILSERVER@" value="${MAILSERVER}"/>
  </target>
  
  <target name="apps" description="Java applications that get installed."
      depends="compile,apps-configuration"
      unless="jar-uptodate">
    
    <echo message="Installing Apps"/>
    <echo message=" Site code: ${SITECODE}"/>
    <echo message=" Destination: ${CFS_HOME}"/>
    <echo message=" Source: ${SRC_BIN}"/>
    
    <javac srcdir="${SRC_BIN}/com/darkhorseventures" verbose="off">
      <classpath>
        <path refid="cfs2.classpath"/>
        <pathelement location="${SRC_BIN}"/>
        <pathelement location="${SRC_LIB}/darkhorseventures-framework.jar"/>
        <pathelement location="${SRC_LIB}/darkhorseventures.jar"/>
        <pathelement location="${SRC_LIB}/zeroio-iteam.jar"/>
        <pathelement location="${SRC_LIB}/jakarta-poi-1.5.0.jar"/>
        <pathelement location="${SRC_LIB}/ccp_integration.jar"/>
      </classpath>
    </javac>
    <delete file="${SRC_BIN}/Notifier.jar"/>
    <jar jarfile="${SRC_BIN}/Notifier.jar" 
          basedir="${SRC_BIN}"
          includes="com/darkhorseventures/**/*.class"
          manifest="${SRC_BIN}/com/darkhorseventures/apps/notifier.mf"/>
    <delete>
      <fileset dir= "${SRC_BIN}/com/darkhorseventures" includes="**/*.class"/>
    </delete>
    <copy todir="${CFS_HOME}" >
      <fileset dir="${SRC_BIN}">
        <include name="Notifier.jar" />
        <include name="notifier" />
        <include name="html2ps" />
        <include name="dataImport" />
        <include name="dataImport-config.xml" />
        <include name="CFSDatabaseReader.xml" />
      </fileset>
    </copy>
    <chmod perm="a+x" >
      <fileset dir="${CFS_HOME}">
        <include name="notifier" />
        <include name="html2ps" />
        <include name="dataImport" />
      </fileset>
    </chmod>
    <copy todir="${CFS_HOME}\scripts" >
      <fileset dir="${SRC}\scripts">
        <include name="env.*" />
      </fileset>
    </copy>
  </target>
  
  <target name="check-site-configuration">
     <uptodate property="webxml-uptodate" 
               srcfile="${SRC_APP}/WEB-INF/web.xml"
               targetfile="${CFS_HOME}/WEB-INF/web.xml" >
     </uptodate>
  </target>
  
  <target name="site-configuration" depends="check-site-configuration"
          unless="webxml-uptodate">
    <echo message="Installing web.xml configuration file"/>
    <copy todir="${CFS_HOME}">
      <fileset dir="${SRC_APP}">
        <include name="WEB-INF/web.xml" />
      </fileset>
    </copy>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@SiteCode@" value="${DBSITECODE}"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@GKDRIVER@" value="${GKDRIVER}"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@GKHOST@" value="${GKHOST}"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@GKUSER@" value="${GKUSER}"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@GKUSERPW@" value="${GKUSERPW}"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@MAILSERVER@" value="${MAILSERVER}"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@KEYSTORE@" value="${CFS_HOME}/WEB-INF/keystore"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@FORCESSL@" value="${FORCESSL}"/>
    <replace file="${CFS_HOME}/WEB-INF/web.xml"
             token="@DEBUGLEVEL@" value="${DEBUGLEVEL}"/>
  </target>

  <!-- Deploy jars to CFS_HOME -->
  <target name="deploy-jars" 
          description="Install library files to site." 
          depends="compile">
    <echo message="Installing JAR files"/>
    <echo message=" Source: ${SRC_APP}/WEB-INF/lib/*.jar"/>
    <echo message=" Destination: ${CFS_HOME}"/>
    <!-- Need to delete jar files that are no longer in source lib -->
    <!-- Fails under windows because Tomcat has these in-use
    <delete quiet="true">
      <fileset dir= "${CFS_HOME}/WEB-INF/lib" includes="*.jar"/>
    </delete>
    -->
    <copy todir="${CFS_HOME}/WEB-INF/lib" >
      <fileset dir="${SRC_APP}">
        <include name="WEB-INF/lib/*.jar" />
      </fileset>
    </copy>
  </target>
  
  <!-- Deploy rest of site files to CFS_HOME -->
  <target name="deploy-site" 
          description="Install files to site" 
          depends="init,site-configuration" unless="site-uptodate">
    <echo message="Installing site"/>
    <echo message=" Source: ${SRC_APP}"/>
    <echo message=" Destination: ${CFS_HOME}"/>
    <!-- Site files, except web.xml -->
    <copy todir="${CFS_HOME}" >
      <fileset dir="${SRC_APP}">
        <include name="*" />
        <include name="images/**" />
        <include name="javascript/**" />
        <include name="WEB-INF/*.xml" />
        <include name="css/**" />
        <include name="WEB-INF/*.tld" />
        <exclude name="WEB-INF/web.xml" />
      </fileset>
    </copy>
    <!-- Directory needed to support graphs -->
    <mkdir dir="${CFS_HOME}/graphs"/>
  </target>

  <!-- Distribute the web app -->
  <target name="dist" 
          description="Installs changes to site"
          depends="deploy-jars,deploy-site">
    <echo message="Cleaning up files"/>
  </target>

  <!-- Generate Java Docs -->
  <target name="docs" description="Install Documentation files to site." 
        depends="compile">
    <echo message="Installing Class Documentation files"/>
    <echo message=" Source: ${SRC_APP}"/>
    <echo message=" Destination: ${CFS_HOME}"/>
    <mkdir dir="${CFS_HOME}/docs"/>
    <echo message=" JavaDocs Source: ${SRC_CLASSES}"/>
    <javadoc sourcepath="${SRC_CLASSES}"
          packagenames="com.*,org.*"
          destdir="${CFS_HOME}/docs"
          excludepackagenames="javax.servlet">
      <header>Copyright 2001-2003 Dark Horse Ventures</header>
      <footer>Copyright 2001-2003 Dark Horse Ventures</footer>
      <classpath>
        <path refid="cfs2.classpath"/>
        <pathelement location="${SRC_LIB}/darkhorseventures.jar"/>
      </classpath>
    </javadoc>
  </target>
  
  <!-- Test code -->
  <target name="installdb" description="Creates a new database">
    <echo message="Building database"/>
    
    <!-- Prepare files for any database type -->
    <delete dir="${SRC}/tmp" failonerror="false"/>
    <mkdir dir="${SRC}/tmp"/>
    <copy todir="${SRC}/tmp">
      <fileset dir="${SRC}/database">
        <include name="*.init" />
      </fileset>
    </copy>
    
    <!-- Only needed for MSSQL -->
    <replace dir="${SRC}/tmp" token="true" value="1">
      <include name="*.init"/>
    </replace>
    <replace dir="${SRC}/tmp" token="false" value="0">
      <include name="*.init"/>
    </replace>
  
    <!-- Create database and initialize data -->
    <sql
        driver="com.microsoft.jdbc.sqlserver.SQLServerDriver"
        url="jdbc:microsoft:sqlserver://127.0.0.1:1433;DatabaseName=cdb_cfs;SelectMethod=cursor"
        userid="dhv_appuser"
        password="@pus3r">
        <!--driver="org.postgresql.Driver"-->
        <!--url="org.postgresql.Driver"-->
      <classpath>
        <path refid="cfs2.classpath"/>
      </classpath>
        
      <transaction src="database/${DBTYPE}/new_cdb.sql"/>
      <transaction src="database/code_tables.init"/>
      <transaction src="database/access.init"/>
      <transaction src="database/organization.init"/>
      <transaction src="${SRC}/tmp/permissions.init"/>
      <transaction src="${SRC}/tmp/data.init"/>
      
      <transaction src="database/${DBTYPE}/new_cfs2.sql"/>
      
      <transaction src="database/${DBTYPE}/new_opportunity.sql"/>
      <transaction src="${SRC}/tmp/opportunity.init"/>
      
      <transaction src="database/${DBTYPE}/new_tms.sql"/>
      <transaction src="${SRC}/tmp/tms.init"/>
      
      <transaction src="database/${DBTYPE}/new_custom_field.sql"/>
      
      <transaction src="database/${DBTYPE}/new_project.sql"/>
      <transaction src="${SRC}/tmp/project.init"/>
      
      <transaction src="database/${DBTYPE}/new_campaign.sql"/>
      <transaction src="${SRC}/tmp/campaign.init"/>
      
      <transaction src="database/${DBTYPE}/new_help.sql"/>
      
      <transaction src="database/${DBTYPE}/new_sync.sql"/>
      <transaction src="${SRC}/tmp/sync.init"/>
      
      <transaction src="database/${DBTYPE}/new_autoguide.sql"/>
      <transaction src="${SRC}/tmp/autoguide.init"/>
      
      <transaction src="database/${DBTYPE}/new_revenue.sql"/>
      <transaction src="${SRC}/tmp/revenue.init"/>
      
      <transaction src="database/${DBTYPE}/new_task.sql"/>
      <transaction src="${SRC}/tmp/task.init"/>
    </sql>
    <delete dir="${SRC}/tmp" failonerror="false"/>
  </target>
  
  <!-- Test code -->
  <target name="upgradedb" description="Upgrades an existing database">
    <echo message="Upgrading database"/>
    <sql
        driver="com.microsoft.jdbc.sqlserver.SQLServerDriver"
        url="jdbc:microsoft:sqlserver://127.0.0.1:1433;DatabaseName=cdb_cfs;SelectMethod=cursor"
        userid="dhv_appuser"
        password="@pus3r">
        <!--driver="org.postgresql.Driver"-->
      <classpath>
        <path refid="cfs2.classpath"/>
      </classpath>
        
      <transaction src="database/${DBTYPE}/upgrade.sql"/>
    </sql>
  </target>
  
</project>
